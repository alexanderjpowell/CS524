# Version 2, print something, then exit

# switch to the Text segment
	.text 
	.globl main
main:
	# the rest of the main program goes here
	la $a0, hello_string
	jal Print_string
	
	jal Exit
	
# switch to the Data segment
.data
# global data is defined here
hello_string:
.asciiz  "Hello, world\n"

# Wrapper functions around some of the system calls
# Switch to the Text segment
	.text
	
#	.globl Print_integer
#Print_integer: # print the integer in register a0
#	addi $v0, $zero, 1
#	syscall
#	jr $ra
	
	.globl Print_string
Print_string: # print the string whose starting address is in register a0
	addi $v0, $zero, 4
	syscall
	jr $ra
	
	.globl Exit
Exit: # end the program no explicit return status
	addi $v0, $zero, 10
	syscall
	jr $ra
	
#	.globl Exit2
#Exit2: # end the program, with return status from register a0
#	addi $v0, $zero, 17
#	syscall
#	jr $ra